version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3.10-management
    mem_limit: 350m
    expose:
      - "5672"
      - "15672"
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - bank-net
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      timeout: 5s
      retries: 10

    # https://hub.docker.com/r/openzipkin/zipkin
  zipkin:
    image: openzipkin/zipkin
    mem_limit: 512m
    expose:
      - "9411"
    ports:
      - "9411:9411"
    networks:
      - bank-net
    environment:
      - RABBIT_ADDRESSES=rabbitmq
      - RABBIT_USER=guest
      - RABBIT_PASSWORD=guest
      - STORAGE_TYPE=mem
    depends_on:
      rabbitmq:
        condition: service_healthy

  configServer:
    image: andychentw/bank-config:latest
    ports:
      - "8010:8010"
    networks:
      - bank-net

  eurekaServer:
    image: andychentw/eureka-server
    ports:
      - "8011:8011"
    networks:
      - bank-net
    depends_on:
      - configServer
    environment:
      - spring.config.import=configserver:http://configServer:8010
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
#  eurekaServer1:
#    image: andychentw/eureka-server
#    ports:
#      - "8012:8011"
#    networks:
#      - bank-net
#    depends_on:
#      - configServer
#    environment:
#      - spring.config.import=configserver:http://configServer:8010
#    deploy:
#      restart_policy:
#        condition: on-failure
#        delay: 5s
#        max_attempts: 3
#        window: 120s


  accounts:
    image: andychentw/accounts:latest
    ports:
      - "8080:8080"
    depends_on:
      - configServer
      - eurekaServer
    networks:
      - bank-net
    environment:
      - spring.profiles.active=dev
      - spring.config.import=configserver:http://configServer:8010
      - eureka.client.service-url.defaultZone=http://eurekaServer:8011/eureka
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
        
  cards:
    image: andychentw/cards:latest
    ports:
      - 9000:9000
    depends_on:
      - configServer
      - eurekaServer
    networks:
      - bank-net
    environment:
      - spring.profiles.active=dev
      - spring.config.import=configserver:http://configServer:8010
      - eureka.client.service-url.defaultZone=http://eurekaServer:8011/eureka
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
#  cards1:
#    image: andychentw/cards:latest
#    ports:
#      - 9001:9000
#    depends_on:
#      - configServer
#      - eurekaServer
#    networks:
#      - bank-net
#    environment:
#      - spring.profiles.active=dev
#      - spring.config.import=configserver:http://configServer:8010
#      - eureka.client.service-url.defaultZone=http://eurekaServer:8011/eureka,http://eurekaServer1:8011/eureka
#    deploy:
#      restart_policy:
#        condition: on-failure
#        delay: 5s
#        max_attempts: 3
#        window: 120s

  postgresDB:
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: p@ssw0rd
      POSTGRES_DB: postgres
    networks:
      - bank-net

  loans:
    image: andychentw/loans:latest
    ports:
      - 8090:8090
    depends_on:
      - configServer
      - eurekaServer
      - postgresDB
    networks:
      - bank-net
    environment:
      - spring.profiles.active=dev
      - spring.config.import=configserver:http://configServer:8010
      - eureka.client.service-url.defaultZone=http://eurekaServer:8011/eureka
      - db.postgres.url=r2dbc:postgresql://postgresDB:5432
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
        

networks:
  bank-net:
